services:
  # Build WASM module first
  wasm-builder:
    build:
      context: .
      dockerfile: Dockerfile.wasm
    volumes:
      - wasm-output:/output
      - ./frontend/src/wasm:/frontend/src/wasm
    command: /copy-wasm.sh
    restart: "no"
    profiles:
      - build

  # Signaling server
  signaling-server:
    build:
      context: signaling-server
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    ports:
      - "3000:80"
    volumes:
      - wasm-output:/usr/share/nginx/html/wasm:ro
    depends_on:
      wasm-builder:
        condition: service_completed_successfully
      signaling-server:
        condition: service_healthy
    restart: unless-stopped

  # Development services (commented out by default)
  # Uncomment for development mode
  
  # frontend-dev:
  #   image: node:18-alpine
  #   working_dir: /app
  #   volumes:
  #     - ./frontend:/app
  #     - /app/node_modules
  #   ports:
  #     - "3000:3000"
  #   command: sh -c "npm install && npm run dev"
  #   environment:
  #     - NODE_ENV=development
  #   depends_on:
  #     - wasm-builder

volumes:
  wasm-output:

networks:
  default:
    name: yngvenot-platform-network
